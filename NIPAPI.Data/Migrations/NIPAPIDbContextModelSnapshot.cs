// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NIPAPI.Data.Data;

#nullable disable

namespace NIPAPI.Data.Migrations
{
    [DbContext(typeof(NIPAPIDbContext))]
    partial class NIPAPIDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("NIPAPI.Data.Data.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Rating")
                        .HasColumnType("float");

                    b.Property<string>("Teacher")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Chemical reaction",
                            Rating = 4.5,
                            Teacher = "Mr Ben",
                            Title = "Chemistry"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Physical reaction",
                            Rating = 4.2999999999999998,
                            Teacher = "Mrs Joy",
                            Title = "Physics"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Agile methodology",
                            Rating = 4.0,
                            Teacher = "Mr Steve",
                            Title = "Agile"
                        });
                });

            modelBuilder.Entity("NIPAPI.Data.Data.Registration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Registrations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CourseId = 1,
                            Date = new DateTime(2023, 7, 10, 15, 41, 39, 302, DateTimeKind.Utc).AddTicks(1795),
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            CourseId = 2,
                            Date = new DateTime(2023, 7, 10, 15, 41, 39, 302, DateTimeKind.Utc).AddTicks(1799),
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            CourseId = 3,
                            Date = new DateTime(2023, 7, 10, 15, 41, 39, 302, DateTimeKind.Utc).AddTicks(1801),
                            UserId = 3
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
